{"version":3,"sources":["projects/Mapty/script.js"],"names":["Workout","coords","distance","duration","Date","now","slice","months","description","type","toUpperCase","date","getMonth","getDate","clicks","Running","cadence","calcPace","_setDescription","pace","Cycling","elevationGain","calcSpeed","speed","form","document","querySelector","containerWorkouts","inputType","inputDistance","inputDuration","inputCadence","inputElevation","logo","App","_getPosition","_getLocalStorage","addEventListener","_newWorkout","bind","_toggleElevationField","_moveToPopup","reset","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","longitude","L","map","setView","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","classList","remove","focus","value","style","display","add","setTimeout","closest","toggle","e","validInputs","inputs","every","inp","Number","isFinite","allPositive","preventDefault","latlng","lat","lng","workout","elevation","push","_renderWorkout","_hideForm","_setLocalStorage","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","id","toFixed","insertAdjacentHTML","workoutEl","target","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","removeItem","location","reload","app"],"mappings":"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","file":"script.4aebd6ff.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    // this.date = ...\n    // this.id = ...\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling';\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1, cycling1);\n\n///////////////////////////////////////\n// APPLICATION ARCHITECTURE\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nconst logo = document.querySelector('.logo')\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // Attach event handlers\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n    logo.addEventListener('click', this.reset.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    // console.log(`https://www.google.pt/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value =\n      '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If workout running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n\n      // Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert('Inputs have to be positive numbers!');\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If workout cycling, create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert('Inputs have to be positive numbers!');\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form + clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n      <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${\n            workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n          }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n    if (workout.type === 'running')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n    if (workout.type === 'cycling')\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    // BUGFIX: When we click on a workout before the map has loaded, we get an error. But there is an easy fix:\n    if (!this.#map) return;\n\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // using the public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"]}